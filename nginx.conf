# This block defines a server to handle incoming HTTP requests.
server {
    # Listen on port 80 for standard HTTP traffic.
    listen 80;
    # Define the server name. In a production environment, this would be your domain name.
    # For local development or testing, 'localhost' is common.
    server_name localhost;

    # Set the document root to Laravel's public directory.
    # Nginx will serve static assets (CSS, JS, images) from this directory directly.
    root /usr/share/nginx/html/public;

    # Add security headers to the HTTP response.
    # These headers help protect against common web vulnerabilities.
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Define the default index files Nginx should look for when a directory is requested.
    index index.php index.html index.htm;

    # Set the default character set for responses.
    charset utf-8;

    # Handle all requests that don't match a file or directory.
    # This is crucial for Laravel's routing (pretty URLs).
    # It tries to serve the URI as a file, then as a directory, and finally
    # rewrites the request to index.php, passing the original query string.
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Process PHP files.
    # This location block matches any request ending with .php.
    location ~ \.php$ {
        # Pass the request to the PHP-FPM service.
        # 'laravel_php' should be replaced with the actual service name or hostname
        # of your PHP-FPM container within your Docker network (e.g., in Docker Compose).
        # Port 9000 is the default for PHP-FPM.
        fastcgi_pass gac_app:9000;
        # Set the default index file for FastCGI.
        fastcgi_index index.php;
        # Set the SCRIPT_FILENAME parameter, which PHP-FPM uses to locate the script.
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # Include standard FastCGI parameters.
        include fastcgi_params;
    }

    # Deny access to hidden files (those starting with a dot, except for .well-known).
    # This prevents sensitive files (like .env) from being directly accessed.
    location ~ /\.(?!well-known).* {
        deny all;
    }
}